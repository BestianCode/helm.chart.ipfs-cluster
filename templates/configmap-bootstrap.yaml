apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ipfs-cluster.configmapBootstrapName" . }}
data:
  entrypoint.sh: |
    #!/bin/sh

    set -e
    set -x

    user=ipfs
    ipfsClusterRepo=/data/ipfs-cluster

    cat /proc/sys/kernel/hostname

    if [ ! -f ${ipfsClusterRepo}/service.json ]; then
      ipfs-cluster-service init
    fi

    #sed -i s~/ip4/127.0.0.1/tcp/9097~/ip4/0.0.0.0/tcp/9097~ ${ipfsClusterRepo}/service.json
    #sed -i s~/ip4/127.0.0.1/tcp/9095~/ip4/0.0.0.0/tcp/9095~ ${ipfsClusterRepo}/service.json
    #sed -i s~/ip4/127.0.0.1/tcp/9094~/ip4/0.0.0.0/tcp/9094~ ${ipfsClusterRepo}/service.json

    chown -R ${user} ${ipfsClusterRepo}

    if [ `grep "{{ include "ipfs-cluster.serviceName" . }}-0" /proc/sys/kernel/hostname | wc -l` -gt 0 ]; then
      echo "I am the bootstrap node"
      export CLUSTER_ID=${BOOTSTRAP_PEER_ID}
      export CLUSTER_PRIVATEKEY=${BOOTSTRAP_PEER_PRIV_KEY}
      exec /usr/local/bin/entrypoint.sh daemon
    else
      echo "I am not the bootstrap node"
      BOOTSTRAP_ADDR="{{ include "ipfs-cluster.serviceName" . }}-0.{{ include "ipfs-cluster.serviceName" . }}.{{ include "ipfs-cluster.statefulsetName" . }}.svc.cluster.local"
      echo "BOOTSTRAP_ADDR: ${BOOTSTRAP_ADDR}"
      nslookup ${BOOTSTRAP_ADDR}
      exec /usr/local/bin/entrypoint.sh daemon --bootstrap "/dns4/${BOOTSTRAP_ADDR}/tcp/9096/ipfs/${BOOTSTRAP_PEER_ID}"
    fi

  configure-ipfs.sh: |
    #!/bin/sh

    set -e
    set -x

    user=ipfs
    ipfsRepo=/data/ipfs
    ipfsClusterRepo=/data/ipfs-cluster

    if [ -f ${ipfsRepo}/config ]; then
      if [ -f ${ipfsRepo}/repo.lock ]; then
        rm ${ipfsRepo}/repo.lock
      fi
    else
      ipfs init
    fi

    #ipfs config --json Swarm.ConnMgr.HighWater 2000
    #ipfs config --json Datastore.BloomFilterSize 1048576

    ipfs config Addresses.API /ip4/0.0.0.0/tcp/5001
    ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8080
    ipfs config Datastore.StorageMax {{ .Values.persistence.ipfsStorage.size }}GB

    #ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '["*"]'
    #ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '["GET", "PUT", "POST"]'

    chown -R ${user} ${ipfsRepo}
    chown -R ${user} ${ipfsClusterRepo}
